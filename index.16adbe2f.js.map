{"mappings":"AAEOA,eAAeC,IAElB,aADkBC,MAAM,mCACbC,M,CAGRH,eAAeI,IAElB,aADkBF,MAAM,gCACbC,M,CCPRH,eAAeK,EAAWC,GAC7B,MAAMC,EAAU,CACZC,OAAU,OACVC,QAAW,CACP,eAAgB,mBAChBC,OAAW,oBAEfC,KAAQC,KAAKC,UAAUP,IAErBQ,QAAYZ,MAAM,iCAAwBK,GAChD,OAAOQ,QAAQC,IAAKF,EAAIX,O,CCHrBH,eAAeiB,EAAWC,SAIXhB,MAAM,+BAAqBgB,IAH7B,CACZV,OAAU,U,CCRXR,eAAemB,IAClBC,EAAKC,SAASC,UAAY,GAC1B,MAAMD,QAAiBpB,IACjBsB,EAAc,GACpBF,EAASG,SAAQC,IACb,MAAMnB,EAAU,iGAEHmB,EAAKC,yFAGSD,EAAKd,uCAGpCY,EAAYI,KAAKrB,EAAQ,IAEzBc,EAAKC,SAASO,mBAAmB,YAAaL,EAAYM,KAAK,I,CCDnE7B,eAAe8B,EAAWC,GACtBA,EAAEC,iBACF,MAAMC,EAAc,CAChBC,MAAS,GAAGd,EAAKc,MAAMC,QACvBxB,KAAQ,GAAGS,EAAKT,KAAKwB,SAEnBC,QAAmBC,WAAWJ,EAAaK,QAC3CC,EAAOC,SAASC,eAAe,GAAGL,EAAWV,MAC7CQ,EAAQK,EAAKG,cAAc,eAC3B/B,EAAO4B,EAAKG,cAAc,cAChCR,EAAMS,YAAc,GAAGP,EAAWF,QAClCvB,EAAKgC,YAAc,GAAGP,EAAWzB,M,CCjB9B,MAAMS,EAAO,CAChBwB,KAAMJ,SAASC,eAAe,QAC9BI,MAAOL,SAASE,cAAc,UAC9BR,MAAOM,SAASC,eAAe,SAC/B9B,KAAM6B,SAASC,eAAe,QAC9BK,KAAMN,SAASC,eAAe,QAC9BpB,SAAUmB,SAASE,cAAc,cAGrCtB,EAAKyB,MAAME,iBAAiB,SClBrB/C,eAA0B+B,GAC7B,IAAKA,EAAEiB,OAAOC,UAAUC,SAAS,cAC7B,OAEJ,MAAMX,EAAOR,EAAEiB,OAAOG,cAAcA,cAEpClC,EADesB,EAAKb,IAEpBa,EAAKa,Q,IDYThC,EAAKyB,MAAME,iBAAiB,SDnBrB,SAAoBhB,GACvB,IAAKA,EAAEiB,OAAOC,UAAUC,SAAS,eAC7B,OAEJ,MAAMX,EAAOR,EAAEiB,OAAOG,cAChBE,EAAO,CACTnB,MAAOK,EAAKG,cAAc,eAAeC,YACzCW,KAAMf,EAAKG,cAAc,cAAcC,aAE3CvB,EAAKc,MAAMC,MAAQkB,EAAKnB,MACxBd,EAAKT,KAAKwB,MAAQkB,EAAKC,KACvBhB,OAASC,EAAKY,cAAczB,GAC5BN,EAAK0B,KAAKC,iBAAiB,QAASjB,E,ICQxCV,EAAKwB,KAAKG,iBAAiB,UElBpB,SAAsBhB,GAEzBA,EAAEC,iBAMF3B,EAHgB,CACZM,KAAQ,GAHK,IAAI4C,SAASnC,EAAKwB,MACdY,IAAI,eAKzBrC,IACAY,EAAEiB,OAAOS,O,ICXNzD,iBACHoB,EAAKyB,MAAMvB,UAAY,GACvB,MAAMoC,QAActD,IACduD,EAAU,GAChBD,EAAMlC,SAAQC,IACV,MAAMc,EAAO,WAAWd,EAAKC,gHAEAD,EAAKS,gDACPT,EAAKd,4QAKhCgD,EAAQhC,KAAKY,EAAK,IAEtBnB,EAAKyB,MAAMjB,mBAAmB,YAAa+B,EAAQ9B,KAAK,I,CHK5D,GACAV","sources":["src/js/r-get.js","src/js/c-post.js","src/js/d-delete.js","src/js/upLoadComments.js","src/js/updateCard.js","src/index.js","src/js/deleteCard.js","src/js/onSubmitForm.js","src/js/upLoadPosts.js"],"sourcesContent":["const BASE_URL = \"http://localhost:1532\";\n\nexport async function getComment() {\n    const res = await fetch(`${BASE_URL}/comments`)\n    return res.json();\n}\n\nexport async function getPosts() {\n    const res = await fetch(`${BASE_URL}/posts`);\n    return res.json();\n}","const BASE_URL = \"http://localhost:1532\"\n\nexport async function addComment(comment){\n    const options = {\n        \"method\": \"POST\",\n        \"headers\": {\n            \"Content-Type\": \"application/json\",\n            \"Accept\" : \"application/json\"\n        },\n        \"body\": JSON.stringify(comment),\n    };\n    const res = await fetch(`${BASE_URL}/comments`, options)\n    return console.log( res.json());\n}","const BASE_URL = \"http://localhost:1532\";\n\nexport function deleteComment(commentId) {\n    const options = {\n        \"method\": \"DELETE\",\n    }\n    return fetch(`${BASE_URL}/comment/${commentId}`, options).then(res => res.json()).then(console.log);\n}\n\nexport async function deletePost(cardID) {\n    const options = {\n        \"method\": \"DELETE\",\n    }\n    const res = await fetch(`${BASE_URL}/posts/${cardID}`, options);\n   \n}","import { refs } from \"..\";\nimport { getComment } from \"./r-get\";\n\nexport async function upLoadComments() {\n    refs.comments.innerHTML = \"\";\n    const comments = await getComment();\n    const commentsStr = [];\n    comments.forEach(elem => {\n        const comment = `<div class=\"card comment text-center\">\n        <div class=\"card-header\">\n            Comment${elem.id}\n        </div>\n        <div class=\"card-body\">\n            <p class=\"card-text\">${elem.body}</p>\n        </div>\n    </div>`;\n    commentsStr.push(comment);\n    });\n    refs.comments.insertAdjacentHTML(\"beforeend\", commentsStr.join(\"\"));\n}","import { refs } from \"..\";\n\nexport function updateCard(e) {\n    if (!e.target.classList.contains(\"btn-success\")) {\n        return;\n    }\n    const card = e.target.parentElement;\n    const info = {\n        title: card.querySelector(\".card-title\").textContent,\n        text: card.querySelector(\".card-text\").textContent\n    }\n    refs.title.value = info.title;\n    refs.body.value = info.text;\n    cardId = card.parentElement.id;\n    refs.save.addEventListener('click', saveChange);\n}\n\nasync function saveChange(e) {\n    e.preventDefault()\n    const updateValue = {\n        \"title\": `${refs.title.value}`,\n        \"body\": `${refs.body.value}`\n    }\n    const updateCard = await updatePost(updateValue, cardId);\n    const card = document.getElementById(`${updateCard.id}`);\n    const title = card.querySelector(\".card-title\");\n    const body = card.querySelector(\".card-text\");\n    title.textContent = `${updateCard.title}`;\n    body.textContent = `${updateCard.body}`;\n}   ","import { getComment, getPosts } from './js/r-get.js';\nimport { addComment } from './js/c-post.js';\nimport { updateComment, updatePost } from './js/u-patch';\nimport { deleteComment, deletePost } from './js/d-delete.js';\nimport { deleteCard } from './js/deleteCard.js';\nimport { upLoadPosts } from './js/upLoadPosts.js';\nimport { upLoadComments } from './js/upLoadComments.js';\nimport { onSubmitForm } from './js/onSubmitForm.js';\nimport { updateCard } from './js/updateCard.js';\n\nlet cardId;\nexport const refs = {\n    form: document.getElementById(\"form\"),\n    cards: document.querySelector(\".cards\"),\n    title: document.getElementById(\"title\"),\n    body: document.getElementById(\"body\"),\n    save: document.getElementById(\"save\"),\n    comments: document.querySelector(\".comments\")\n}\n\nrefs.cards.addEventListener('click', deleteCard);\nrefs.cards.addEventListener('click', updateCard);\nrefs.form.addEventListener('submit', onSubmitForm);\nupLoadPosts();\nupLoadComments()\n\n\n\n\n\n","import { deletePost } from \"./d-delete\";\n\nexport async function deleteCard(e) {\n    if (!e.target.classList.contains(\"btn-danger\")) {\n        return;\n    }\n    const card = e.target.parentElement.parentElement;\n    const cardID = card.id;\n    deletePost(cardID);\n    card.remove();\n}","import { refs } from \"..\";\nimport { addComment } from \"./c-post\";\nimport { upLoadComments } from \"./upLoadComments\";\n\nexport function onSubmitForm(e) {\n\n    e.preventDefault();\n    const formData = new FormData(refs.form);\n    const res = formData.get(\"comment\");\n    const comment = {\n        'body': `${res}`,\n    }\n    addComment(comment);\n    upLoadComments();\n    e.target.reset();\n}","import { refs } from \"..\";\nimport { getPosts } from \"./r-get\";\n\nexport async function upLoadPosts() {\n    refs.cards.innerHTML = \"\";\n    const posts = await getPosts();\n    const postStr = [];\n    posts.forEach(elem => {\n        const card = `<li id=\"${elem.id}\" class=\"card\" style=\"width: 20rem;\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">${elem.title}</h5>\n            <p class=\"card-text\">${elem.body}</p>\n            <button type=\"button\" class=\"btn btn-danger\">Delete</button>\n            <button type=\"button\" style=\"margin-top:10px\" class=\"btn btn-success\"  data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">Update</button>\n        </div>\n    </li>`;\n        postStr.push(card);\n    });\n    refs.cards.insertAdjacentHTML('beforeend', postStr.join(\"\"));\n}"],"names":["async","$0c47f62721eb7d36$export$44d993ebda59cd80","fetch","json","$0c47f62721eb7d36$export$3790dc04c854c4c9","$7749f17d6fe65016$export$1cab2cf04e810197","comment","options","method","headers","Accept","body","JSON","stringify","res","console","log","$0e6cf58af26408a3$export$6ca2c30598d1bf61","cardID","$9d8c2fbe92a2a83b$export$39851b14ec1f1f11","$1f0dc3b9307be026$export$21666b427502ea6d","comments","innerHTML","commentsStr","forEach","elem","id","push","insertAdjacentHTML","join","$d430793d7589935b$var$saveChange","e","preventDefault","updateValue","title","value","updateCard1","updatePost","cardId","card","document","getElementById","querySelector","textContent","form","cards","save","addEventListener","target","classList","contains","parentElement","remove","info","text","FormData","get","reset","posts","postStr"],"version":3,"file":"index.16adbe2f.js.map"}