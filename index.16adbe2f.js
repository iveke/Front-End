async function t(){return(await fetch("http://localhost:1532/comments")).json()}async function e(){return(await fetch("http://localhost:1532/posts")).json()}async function n(t){const e={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(t)},n=await fetch("http://localhost:1532/comments",e);return console.log(n.json())}async function c(t){await fetch(`http://localhost:1532/posts/${t}`,{method:"DELETE"})}async function a(){s.comments.innerHTML="";const e=await t(),n=[];e.forEach((t=>{const e=`<div class="card comment text-center">\n        <div class="card-header">\n            Comment${t.id}\n        </div>\n        <div class="card-body">\n            <p class="card-text">${t.body}</p>\n        </div>\n    </div>`;n.push(e)})),s.comments.insertAdjacentHTML("beforeend",n.join(""))}async function o(t){t.preventDefault();const e={title:`${s.title.value}`,body:`${s.body.value}`},n=await updatePost(e,cardId),c=document.getElementById(`${n.id}`),a=c.querySelector(".card-title"),o=c.querySelector(".card-text");a.textContent=`${n.title}`,o.textContent=`${n.body}`}const s={form:document.getElementById("form"),cards:document.querySelector(".cards"),title:document.getElementById("title"),body:document.getElementById("body"),save:document.getElementById("save"),comments:document.querySelector(".comments")};s.cards.addEventListener("click",(async function(t){if(!t.target.classList.contains("btn-danger"))return;const e=t.target.parentElement.parentElement;c(e.id),e.remove()})),s.cards.addEventListener("click",(function(t){if(!t.target.classList.contains("btn-success"))return;const e=t.target.parentElement,n={title:e.querySelector(".card-title").textContent,text:e.querySelector(".card-text").textContent};s.title.value=n.title,s.body.value=n.text,cardId=e.parentElement.id,s.save.addEventListener("click",o)})),s.form.addEventListener("submit",(function(t){t.preventDefault(),n({body:`${new FormData(s.form).get("comment")}`}),a(),t.target.reset()})),async function(){s.cards.innerHTML="";const t=await e(),n=[];t.forEach((t=>{const e=`<li id="${t.id}" class="card" style="width: 20rem;">\n        <div class="card-body">\n            <h5 class="card-title">${t.title}</h5>\n            <p class="card-text">${t.body}</p>\n            <button type="button" class="btn btn-danger">Delete</button>\n            <button type="button" style="margin-top:10px" class="btn btn-success"  data-bs-toggle="modal" data-bs-target="#staticBackdrop">Update</button>\n        </div>\n    </li>`;n.push(e)})),s.cards.insertAdjacentHTML("beforeend",n.join(""))}(),a();
//# sourceMappingURL=index.16adbe2f.js.map
